from dataclasses import dataclass, asdict, fields
from typing import Optional

@dataclass
class FeatureSnapshot:
    """
    –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ä–µ–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –¥–ª—è –ø–∞–π–ø–ª–∞–π–Ω–∞ LOB-–∞–Ω–∞–ª–∏—Ç–∏–∫–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, –∑–∞–ø–∏—Å–∏ –≤ parquet, –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞ –∏ –∞–ª–µ—Ä—Ç–æ–≤.
    
    –ü–æ–ª—è:
        ts: float ‚Äî timestamp —Å–æ–±—ã—Ç–∏—è
        price: float ‚Äî —Ü–µ–Ω–∞ —Å–¥–µ–ª–∫–∏
        qty: float ‚Äî –æ–±—ä–µ–º —Å–¥–µ–ª–∫–∏
        side: str ‚Äî —Å—Ç–æ—Ä–æ–Ω–∞ —Å–¥–µ–ª–∫–∏ ('buy'/'sell')
        target: Optional[int] ‚Äî —Ü–µ–ª–µ–≤–∞—è –º–µ—Ç–∫–∞ (–¥–ª—è –æ–±—É—á–µ–Ω–∏—è/–∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞)
        mid_price: Optional[float] ‚Äî —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø–æ —Å—Ç–∞–∫–∞–Ω—É
        avg_price: float ‚Äî —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø–æ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
        trade_count: int ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫ –≤ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
        buy_volume: float ‚Äî –æ–±—ä–µ–º –ø–æ–∫—É–ø–æ–∫
        sell_volume: float ‚Äî –æ–±—ä–µ–º –ø—Ä–æ–¥–∞–∂
        buy_sell_ratio: float ‚Äî –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫ –∫ –ø—Ä–æ–¥–∞–∂–∞–º
        direction: str ‚Äî –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ('buy'/'sell')
        reason: str ‚Äî –ø—Ä–∏—á–∏–Ω–∞ —Å–∏–≥–Ω–∞–ª–∞
        bid_volume: float ‚Äî –æ–±—ä–µ–º –Ω–∞ bid
        ask_volume: float ‚Äî –æ–±—ä–µ–º –Ω–∞ ask
        bid_volume_near: float ‚Äî bid –≤–±–ª–∏–∑–∏ mid
        ask_volume_near: float ‚Äî ask –≤–±–ª–∏–∑–∏ mid
        imbalance: float ‚Äî –¥–∏—Å–±–∞–ª–∞–Ω—Å —Å—Ç–∞–∫–∞–Ω–∞
        buy_vol_speed: Optional[float] ‚Äî —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫
        sell_vol_speed: Optional[float] ‚Äî —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂
        price_std: Optional[float] ‚Äî std —Ü–µ–Ω—ã
        ma_volume: Optional[float] ‚Äî MA –æ–±—ä–µ–º–∞
        volatility: Optional[float] ‚Äî –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
        activity_spike: Optional[int] ‚Äî —Ñ–ª–∞–≥ –≤—Å–ø–ª–µ—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

        # –ù–æ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –¥–ª—è –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π –∏ –≥–ª—É–±–∏–Ω—ã —Å—Ç–∞–∫–∞–Ω–∞
        bid_volume_pct_025: Optional[float] ‚Äî bid-–æ–±—ä–µ–º –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö ¬±0.25% –æ—Ç mid
        ask_volume_pct_025: Optional[float] ‚Äî ask-–æ–±—ä–µ–º –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö ¬±0.25% –æ—Ç mid
        imbalance_pct_025: Optional[float] ‚Äî –¥–∏—Å–±–∞–ª–∞–Ω—Å —Å—Ç–∞–∫–∞–Ω–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö ¬±0.25%
        bid_density_lvl1_3: Optional[float] ‚Äî –ø–ª–æ—Ç–Ω–æ—Å—Ç—å bid –Ω–∞ —É—Ä–æ–≤–Ω—è—Ö 1-3
        ask_density_lvl1_3: Optional[float] ‚Äî –ø–ª–æ—Ç–Ω–æ—Å—Ç—å ask –Ω–∞ —É—Ä–æ–≤–Ω—è—Ö 1-3
        is_spoofing_like: Optional[int] ‚Äî —ç–≤—Ä–∏—Å—Ç–∏–∫–∞ spoofing (0/1)
        has_fake_wall: Optional[int] ‚Äî —ç–≤—Ä–∏—Å—Ç–∏–∫–∞ fake wall (0/1)
        orderbook_entropy: Optional[float] ‚Äî —ç–Ω—Ç—Ä–æ–ø–∏—è —Å—Ç–∞–∫–∞–Ω–∞
        orderbook_roc: Optional[float] ‚Äî rate of change —Å—Ç–∞–∫–∞–Ω–∞
        price_roc: Optional[float] ‚Äî rate of change —Ü–µ–Ω—ã
    """
    ts: float
    price: Optional[float] = None
    qty: Optional[float] = None
    side: Optional[str] = None
    target: Optional[int] = None
    mid_price: Optional[float] = None
    avg_price: float = 0.0
    trade_count: int = 0
    buy_volume: float = 0.0
    sell_volume: float = 0.0
    buy_sell_ratio: float = 1.0
    direction: str = ""
    reason: str = ""
    bid_volume: float = 0.0
    ask_volume: float = 0.0
    bid_volume_near: float = 0.0
    ask_volume_near: float = 0.0
    imbalance: float = 0.0
    buy_vol_speed: Optional[float] = None
    sell_vol_speed: Optional[float] = None
    price_std: Optional[float] = None
    ma_volume: Optional[float] = None
    volatility: Optional[float] = None
    activity_spike: Optional[int] = None

    # üîΩ –ù–æ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –¥–ª—è –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π –∏ –≥–ª—É–±–∏–Ω—ã —Å—Ç–∞–∫–∞–Ω–∞
    bid_volume_pct_025: Optional[float] = None  # TODO: –≤—ã—á–∏—Å–ª—è—Ç—å –≤ stream_merger.py
    ask_volume_pct_025: Optional[float] = None  # TODO: –≤—ã—á–∏—Å–ª—è—Ç—å –≤ stream_merger.py
    imbalance_pct_025: Optional[float] = None   # TODO: –≤—ã—á–∏—Å–ª—è—Ç—å –≤ stream_merger.py
    bid_density_lvl1_3: Optional[float] = None  # TODO: –≤—ã—á–∏—Å–ª—è—Ç—å –≤ stream_merger.py
    ask_density_lvl1_3: Optional[float] = None  # TODO: –≤—ã—á–∏—Å–ª—è—Ç—å –≤ stream_merger.py
    is_spoofing_like: Optional[int] = 0         # TODO: —ç–≤—Ä–∏—Å—Ç–∏–∫–∞ –≤ trade_activity_analyzer.py
    has_fake_wall: Optional[int] = 0            # TODO: —ç–≤—Ä–∏—Å—Ç–∏–∫–∞ –≤ trade_activity_analyzer.py
    orderbook_entropy: Optional[float] = None   # TODO: –≤—ã—á–∏—Å–ª—è—Ç—å –≤ stream_merger.py
    orderbook_roc: Optional[float] = None       # TODO: –≤—ã—á–∏—Å–ª—è—Ç—å –≤ stream_merger.py
    price_roc: Optional[float] = None           # –ù–û–í–´–ô –ü–†–ò–ó–ù–ê–ö

    def to_dict(self):
        return asdict(self)

    @classmethod
    def from_dict(cls, d: dict):
        field_names = {f.name for f in fields(cls)}
        filtered = {k: v for k, v in d.items() if k in field_names}
        return cls(**filtered)

    def __post_init__(self):
        # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å parquet –∏ –º–æ–¥–µ–ª—å—é
        if self.side is not None and not isinstance(self.side, str):
            self.side = str(self.side)
        if self.direction is not None and not isinstance(self.direction, str):
            self.direction = str(self.direction)
        if self.reason is not None and not isinstance(self.reason, str):
            self.reason = str(self.reason) 