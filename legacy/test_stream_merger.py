import sys
import os
import pytest

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../../')))
from lob_analyzer.data.stream_merger import StreamMerger

# üß™ –¢–µ—Å—Ç –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ñ–∏—á–µ–π –ø—Ä–∏ –≤–∞–ª–∏–¥–Ω—ã—Ö –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
def test_merger_with_valid_input():
    merger = StreamMerger(symbol="BTCUSDT")
    trade_batch = [{"ts": 1000.0, "price": 101.0, "qty": 0.5, "side": "buy"}]
    bids = [[100.0, 1.0], [99.5, 2.0]]
    asks = [[102.0, 1.0], [102.5, 2.0]]
    snapshot_ts = 999.0

    snapshot = merger.process_data_for_historical(trade_batch, bids, asks, snapshot_ts)

    assert snapshot is not None
    assert snapshot.ts == 1000.0
    assert snapshot.mid_price > 0
    assert snapshot.bid_volume > 0
    assert snapshot.ask_volume > 0

# üß™ –¢–µ—Å—Ç –Ω–∞ –ø—É—Å—Ç–æ–π trade_batch
def test_merger_empty_trade_batch_returns_none():
    merger = StreamMerger(symbol="BTCUSDT")
    snapshot = merger.process_data_for_historical([], [[100, 1]], [[102, 1]], 999.0)
    assert snapshot is None

# üß™ –¢–µ—Å—Ç –Ω–∞ –ø—É—Å—Ç—ã–µ —Å—Ç–∞–∫–∞–Ω—ã
def test_merger_empty_orderbook_returns_none():
    merger = StreamMerger(symbol="BTCUSDT")
    trade = [{"ts": 1000.0, "price": 101.0, "qty": 0.5, "side": "buy"}]
    snapshot = merger.process_data_for_historical(trade, [], [], 999.0)
    assert snapshot is None
